"""Initial tables

Revision ID: 3dbd48beba3b
Revises: 
Create Date: 2025-08-28 10:00:02.410284

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3dbd48beba3b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('_prisma_migrations')
    op.alter_column('Group', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.drop_index('Group_name_key', table_name='Group')
    op.create_index(op.f('ix_Group_id'), 'Group', ['id'], unique=False)
    op.create_unique_constraint(None, 'Group', ['name'])
    op.alter_column('User', 'email',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('User', 'password',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('User', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('User', 'isAdmin',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.drop_index('User_email_key', table_name='User')
    op.create_index(op.f('ix_User_id'), 'User', ['id'], unique=False)
    op.create_unique_constraint(None, 'User', ['email'])
    op.drop_constraint('User_groupId_fkey', 'User', type_='foreignkey')
    op.create_foreign_key(None, 'User', 'Group', ['groupId'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'User', type_='foreignkey')
    op.create_foreign_key('User_groupId_fkey', 'User', 'Group', ['groupId'], ['id'], onupdate='CASCADE', ondelete='SET NULL')
    op.drop_constraint(None, 'User', type_='unique')
    op.drop_index(op.f('ix_User_id'), table_name='User')
    op.create_index('User_email_key', 'User', ['email'], unique=True)
    op.alter_column('User', 'isAdmin',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('User', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('User', 'password',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('User', 'email',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_constraint(None, 'Group', type_='unique')
    op.drop_index(op.f('ix_Group_id'), table_name='Group')
    op.create_index('Group_name_key', 'Group', ['name'], unique=True)
    op.alter_column('Group', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.create_table('_prisma_migrations',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('checksum', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('finished_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('migration_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('logs', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('rolled_back_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('applied_steps_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='_prisma_migrations_pkey')
    )
    # ### end Alembic commands ###
